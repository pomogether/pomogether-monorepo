name: CI Pipeline

on:
  pull_request:
    branches:
      - main
env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: pomogether/pomogether-monorepo

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          outputs: type=docker,dest=/tmp/${{ github.sha }}.tar
          context: .
          file: apps/api/Dockerfile

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}
          path: /tmp/${{ github.sha }}.tar
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.1.4
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Lint code
        run: pnpm lint:report
      
      - name: Merge lint reports
        run: jq -s '[.[]]|flatten' lint-results/*.json &> lint-results/eslint_report.json

      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@v3
        continue-on-error: true
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          report-json: "lint-results/eslint_report.json"
          check-name: "Eslint Report"

  image-scan:
    runs-on: ubuntu-latest
    needs: [build, lint]

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.sha }}
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/${{ github.sha }}.tar

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

  push-and-sign-image:
    runs-on: ubuntu-latest
    needs: image-scan
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: sigstore/cosign-installer@v3.6.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.sha }}
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/${{ github.sha }}.tar

      - name: Push image to GitHub Container Registry
        run: |
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Sign image with a key
        run: |
          cosign sign --yes $(docker inspect ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} --format='{{index .RepoDigests 0}}')
