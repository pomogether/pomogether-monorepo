name: CI Pipeline

on:
  pull_request:
    branches:
      - main
env:
  DOCKER_REGISTRY: ghcr.io

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.1.4
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Lint code
        run: pnpm lint:report
        continue-on-error: true

      - name: Merge lint reports
        run: jq -s '[.[]]|flatten' lint-results/*.json &> lint-results/eslint_report.json

      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          report-json: "lint-results/eslint_report.json"
          check-name: "lint"
          fail-on-warning: true
          fail-on-error: true

  build:
    needs: lint
    strategy:
      matrix:
        app: [api, web]
    runs-on: ubuntu-latest
    env:
      APP_NAME: pomogether-${{ matrix.app }}
      APP_NAME_HASH: pomogether-${{ matrix.app }}-${{ github.sha }}
      IMAGE_NAME: pomogether/pomogether-${{ matrix.app }}
      DOCKER_FILE: apps/${{ matrix.app }}/Dockerfile
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ env.DOCKER_FILE }}

          cache-from: type=gha
          cache-to: type=gha,mode=max

          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

          outputs: type=docker,dest=/tmp/${{ env.APP_NAME_HASH }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME_HASH }}
          path: /tmp/${{ env.APP_NAME_HASH }}.tar
          retention-days: 5

  image-scan:
    runs-on: ubuntu-latest
    needs: [build, lint]
    strategy:
      matrix:
        app: [api, web]
    env:
      ARTIFACT_NAME: pomogether-${{ matrix.app }}-${{ github.sha }}
      IMAGE_NAME: pomogether/pomogether-${{ matrix.app }}

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/${{ env.ARTIFACT_NAME }}.tar

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        continue-on-error: true
        with:
          image-ref: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          exit-code: "1"
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

  push-and-sign-image:
    runs-on: ubuntu-latest
    needs: image-scan
    strategy:
      matrix:
        app: [api, web]
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      ARTIFACT_NAME: pomogether-${{ matrix.app }}-${{ github.sha }}
      IMAGE_NAME: pomogether/pomogether-${{ matrix.app }}

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: sigstore/cosign-installer@v3.6.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/${{ env.ARTIFACT_NAME }}.tar

      - name: Push image to GitHub Container Registry
        run: |
          docker push ${{ env.DOCKER_REGISTRY }}/pomogether/pomogether-${{ matrix.app }}:${{ github.sha }}

      - name: Sign image with a key
        run: |
          cosign sign --yes $(docker inspect ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} --format='{{index .RepoDigests 0}}')
